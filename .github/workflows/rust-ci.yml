name: Rust CI with Sonar

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Instalar Rust estable
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt

      # 3. Instalar Tarpaulin (coverage)
      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin

      # 4. Cache de dependencias Cargo
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # 5. Compilar proyecto
      - name: Build
        run: cargo build --verbose

      # 6. Correr tests con coverage y exportar reporte XML
      - name: Run tests with coverage
        run: cargo tarpaulin --out Xml --output-dir target/tarpaulin

      # 7. Analizar con SonarCloud/SonarQube
      - name: Sonar Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # GitHub token para PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     # Token de Sonar que defines en Secrets
